# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='rpc.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\trpc.proto\"\x0f\n\rCommonRequest\"\x19\n\x0cTestApiReply\x12\t\n\x01s\x18\x01 \x01(\t\"\x1c\n\x0cGetFlagReply\x12\x0c\n\x04\x66lag\x18\x01 \x01(\t2_\n\x03\x63tf\x12+\n\x08test_api\x12\x0e.CommonRequest\x1a\r.TestApiReply\"\x00\x12+\n\x08get_flag\x12\x0e.CommonRequest\x1a\r.GetFlagReply\"\x00\x62\x06proto3')
)




_COMMONREQUEST = _descriptor.Descriptor(
  name='CommonRequest',
  full_name='CommonRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13,
  serialized_end=28,
)


_TESTAPIREPLY = _descriptor.Descriptor(
  name='TestApiReply',
  full_name='TestApiReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='s', full_name='TestApiReply.s', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=55,
)


_GETFLAGREPLY = _descriptor.Descriptor(
  name='GetFlagReply',
  full_name='GetFlagReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='flag', full_name='GetFlagReply.flag', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=85,
)

DESCRIPTOR.message_types_by_name['CommonRequest'] = _COMMONREQUEST
DESCRIPTOR.message_types_by_name['TestApiReply'] = _TESTAPIREPLY
DESCRIPTOR.message_types_by_name['GetFlagReply'] = _GETFLAGREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CommonRequest = _reflection.GeneratedProtocolMessageType('CommonRequest', (_message.Message,), dict(
  DESCRIPTOR = _COMMONREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:CommonRequest)
  ))
_sym_db.RegisterMessage(CommonRequest)

TestApiReply = _reflection.GeneratedProtocolMessageType('TestApiReply', (_message.Message,), dict(
  DESCRIPTOR = _TESTAPIREPLY,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:TestApiReply)
  ))
_sym_db.RegisterMessage(TestApiReply)

GetFlagReply = _reflection.GeneratedProtocolMessageType('GetFlagReply', (_message.Message,), dict(
  DESCRIPTOR = _GETFLAGREPLY,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:GetFlagReply)
  ))
_sym_db.RegisterMessage(GetFlagReply)



_CTF = _descriptor.ServiceDescriptor(
  name='ctf',
  full_name='ctf',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=87,
  serialized_end=182,
  methods=[
  _descriptor.MethodDescriptor(
    name='test_api',
    full_name='ctf.test_api',
    index=0,
    containing_service=None,
    input_type=_COMMONREQUEST,
    output_type=_TESTAPIREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='get_flag',
    full_name='ctf.get_flag',
    index=1,
    containing_service=None,
    input_type=_COMMONREQUEST,
    output_type=_GETFLAGREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CTF)

DESCRIPTOR.services_by_name['ctf'] = _CTF

# @@protoc_insertion_point(module_scope)
